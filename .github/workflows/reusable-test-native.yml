name: Run Tests on Native Platforms

on:
  workflow_call:
    inputs:
      os:
        description: 'Used to set the runs-on attribute, must be one of macos, ubuntu, windows'
        required: true
        type: string
        default: ''
      preset:
        description: 'CMake preset used to build patomic and googletest, will be conditionally suffixed with one of ansi, coverage, sanitize, warning'
        required: true
        type: string
        default: ''
      architecture:
        description: 'CPU architecture tests are run on, used for naming (does not affect how tests are run)'
        required: true
        type: string
        default: ''
      compiler:
        description: 'Shortname of compiler being used, used for naming (does not affect which compiler is used)'
        required: true
        type: string
        default: ''

jobs:
  checks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check No Empty Inputs
        shell: bash
        run: |
          # checks input is not empty
          check_input() {
            input_name="${1}"
            input_value="${2}"
            if [[ -z "${input_value}" ]]; then
              echo "Error: required input '${input_name}' is empty or was not specified."
              exit 1
            else
              echo "${input_name}: ${input_value}"
            fi
          }

          # apply function to all inputs
          check_input "os"           "${{ inputs.os }}"
          check_input "preset"       "${{ inputs.preset }}"
          check_input "architecture" "${{ inputs.architecture }}"
          check_input "compiler"     "${{ inputs.compiler }}"

  warning:
    needs: checks
    runs-on: ${{ inputs.os }}-latest
    strategy:
      matrix:
        build_shared:
          - static
          - shared
        include:
          # hidden single variables
          - cmake_build_type: Release
          - cmake_preset: ${{ inputs.preset }}-warning
          - unique_id: ${{ inputs.architecture }}-${{ inputs.os }}-${{ inputs.compiler }}-${{ matrix.build_shared }}
          - unique_name: ${{ inputs.architecture }}-${{ inputs.os }}-${{ inputs.compiler }}-${{ matrix.build_shared }}
          # alias variables
          - build_shared: static
            cmake_build_shared: OFF
          - build_shared: shared
            cmake_build_shared: ON

    steps:
      - name: Checkout patomic
        uses: actions/checkout@v4
        with:
          path: patomic

      - name: Restore Cached GoogleTest
        id: cache-googletest
        uses: actions/cache@v3
        with:
          path: googletest/build/install
          key: googletest-${{ matrix.unique_id }}

      - name: Checkout GoogleTest
        if: steps.cache-googletest.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: google/googletest
          path: googletest

      - name: Build and Install GoogleTest
        if: steps.cache-googletest.outputs.cache-hit != 'true'
        run: |
          cd googletest
          cp ../patomic/CMakePresets.json .
          mkdir build
          cd build
          cmake --preset ${{ matrix.cmake_preset }} -DBUILD_TESTING=OFF -DCMAKE_CXX_FLAGS="" -DBUILD_SHARED_LIBS=${{ matrix.cmake_build_shared }} -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} -Dgtest_force_shared_crt=ON -Dgtest_hide_internal_symbols=ON ..
          cmake --build . --verbose --config ${{ matrix.cmake_build_type }}
          cmake --install . --config ${{ matrix.cmake_build_type }} --prefix install
      
      - name: Build patomic
        run: |
          cd patomic
          mkdir build
          cd build
          cmake --preset ${{ matrix.cmake_preset }} -DBUILD_SHARED_LIBS=${{ matrix.cmake_build_shared }} -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} -DGTest_ROOT:PATH="../../googletest/build/install" ..
          cmake --build . --verbose --config ${{ matrix.cmake_build_type }}
      
      - name: Test patomic
        continue-on-error: true
        run: |
          cd patomic/build
          ctest --verbose --output-junit Testing/Temporary/results.xml --build-config ${{ matrix.cmake_build_type }} .
      
      - name: Prepare Test Results
        run: |
          mkdir upload
          python3 patomic/test/improve_ctest_xml.py --input patomic/build/Testing/Temporary/results.xml --triple ${{ matrix.unique_name }} --output upload/${{ matrix.unique_name }}.xml

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-warning-results
          path: upload/
